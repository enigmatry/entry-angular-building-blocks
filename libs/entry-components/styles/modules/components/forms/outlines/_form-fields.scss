/* stylelint-disable selector-max-pseudo-class */
@use 'sass:map';

@mixin generate-from($theme) {
	.mat-mdc-text-field-wrapper {
		&:not(.mdc-text-field--outlined) .mat-mdc-form-field-infix {
			padding: {
				top: map.get($theme, 'forms', 'fields', 'infix-padding-top');
				bottom: map.get($theme, 'forms', 'fields', 'infix-padding-bottom');
			}
		}

		.mat-mdc-form-field-focus-overlay {
			background-color: map.get($theme, 'general', 'inputs', 'background-color');
		}
	}

	.mdc-text-field:not(.mat-form-field-no-animations) .mdc-floating-label {
		color: map.get($theme, 'forms', 'fields', 'label-color');
	}

	.mdc-text-field--focused:not(.mdc-text-field--disabled) .mdc-floating-label {
		color: map.get($theme, 'forms', 'fields', 'label-color');
	}

	.mdc-text-field--filled:not(.mdc-text-field--disabled) {
		background-color: map.get($theme, 'general', 'inputs', 'background-color');

		.mdc-line-ripple::before {
			border-bottom: {
				width: map.get($theme, 'forms', 'fields', 'outline', 'border-width');
				color: map.get($theme, 'forms', 'fields', 'outline', 'border-color');
			}
		}

		&:hover {
			.mdc-line-ripple::before {
				border-bottom-color: map.get($theme, 'forms', 'fields', 'outline', 'border-hover-color');
			}
		}

		.mdc-line-ripple::after {
			border-bottom-color: map.get($theme, 'forms', 'fields', 'outline', 'border-hover-color');
		}
	}

	.mat-mdc-select-arrow {
		color: map.get($theme, 'forms', 'fields', 'label-color');
	}

	.mdc-text-field--disabled.mdc-text-field--filled {
		background-color: map.get($theme, 'forms', 'fields', 'outline', 'disabled-background');
	}
}