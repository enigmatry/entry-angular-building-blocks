@use 'sass:map';

/* stylelint-disable-next-line @stylistic/max-line-length */
$checkbox-selector: '.mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate = "true"]) ~ .mdc-checkbox__background';

@mixin generate-from($theme) {
	$background: map.get($theme, 'general', 'checkboxes', 'background');
	$border-hover-color: map.get($theme, 'general', 'checkboxes', 'border-hover-color');
	$disabled-color: map.get($theme, 'general', 'checkboxes', 'disabled', 'color');
	$disabled-border-color: map.get($theme, 'general', 'checkboxes', 'disabled', 'border-color');

	@if $background or $border-hover-color {
		.mat-mdc-checkbox {
			@if $background {
				.mdc-form-field .mdc-checkbox #{$checkbox-selector} {
					background-color: $background;
				}
			}

			&:hover {
				/* stylelint-disable-next-line selector-max-pseudo-class */
				.mdc-checkbox:hover {
					/* stylelint-disable-next-line max-nesting-depth */
					@if $background and $border-hover-color {
						#{$checkbox-selector} {
							border-color: $border-hover-color;
							background-color: $background;
						}
					}
				}
			}
		}
	}

	@if $disabled-color or $disabled-border-color {
		.mat-mdc-checkbox.mdc-checkbox--disabled {
			.mdc-checkbox__background {
				/* stylelint-disable-next-line max-nesting-depth */
				@if $disabled-border-color {
					border-color: $disabled-border-color;
				}
			}

			.mdc-label {
				/* stylelint-disable-next-line max-nesting-depth */
				@if $disabled-color {
					color: $disabled-color;
				}
			}
		}
	}
}